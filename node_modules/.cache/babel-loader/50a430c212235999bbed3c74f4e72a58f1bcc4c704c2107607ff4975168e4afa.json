{"ast":null,"code":"import dashboardService from \"../services/dashboardService\";\nexport default {\n  name: \"studentsHome\",\n  data() {\n    return {\n      // students: [],\n      genderChart: null,\n      ethnicityChart: null,\n      lunchChart: null,\n      preperationCourceChart: null,\n      parentalEducationChart: null,\n      buyersData: {\n        type: \"line\",\n        data: {\n          labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n          datasets: [{\n            backgroundColor: \"rgba(99,179,237,0.4)\",\n            strokeColor: \"#63b3ed\",\n            pointColor: \"#fff\",\n            pointStrokeColor: \"#63b3ed\",\n            data: [203, 156, 99, 251, 305, 247, 256]\n          }, {\n            backgroundColor: \"rgba(198,198,198,0.4)\",\n            strokeColor: \"#f7fafc\",\n            pointColor: \"#fff\",\n            pointStrokeColor: \"#f7fafc\",\n            data: [86, 97, 144, 114, 94, 108, 156]\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            yAxes: [{\n              gridLines: {\n                display: false\n              },\n              ticks: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    async fetchAllStudents() {\n      try {\n        const response = await dashboardService.getAllStudents();\n        this.students = response.data; // Assuming 'data' contains your students array\n      } catch (error) {\n        console.error(\"Error fetching students:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchAllStudents();\n  }\n};","map":{"version":3,"names":["dashboardService","name","data","genderChart","ethnicityChart","lunchChart","preperationCourceChart","parentalEducationChart","buyersData","type","labels","datasets","backgroundColor","strokeColor","pointColor","pointStrokeColor","options","legend","display","scales","yAxes","gridLines","ticks","xAxes","methods","fetchAllStudents","response","getAllStudents","students","error","console","mounted"],"sources":["src/pages/Students.vue"],"sourcesContent":["<template>\r\n  <div id=\"students\">\r\n    <nav class=\"text-sm font-semibold mb-6\" aria-label=\"Breadcrumb\">\r\n      <ol class=\"list-none p-0 inline-flex\">\r\n        <li class=\"flex items-center text-blue-500\">\r\n          <a href=\"#\" class=\"text-gray-700\">MAIN</a>\r\n          <svg\r\n            class=\"fill-current w-3 h-3 mx-3\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 320 512\"\r\n          >\r\n            <path\r\n              d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n            />\r\n          </svg>\r\n        </li>\r\n        <li class=\"flex items-center\">\r\n          <a href=\"#\" class=\"text-gray-600\">Students</a>\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n\r\n    <div class=\"flex flex-wrap -mx-3\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dashboardService from \"../services/dashboardService\";\r\n\r\nexport default {\r\n  name: \"studentsHome\",\r\n  data() {\r\n    return {\r\n      // students: [],\r\n      genderChart: null,\r\n      ethnicityChart: null,\r\n      lunchChart: null,\r\n      preperationCourceChart: null,\r\n      parentalEducationChart: null,\r\n      buyersData: {\r\n        type: \"line\",\r\n        data: {\r\n          labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n          datasets: [\r\n            {\r\n              backgroundColor: \"rgba(99,179,237,0.4)\",\r\n              strokeColor: \"#63b3ed\",\r\n              pointColor: \"#fff\",\r\n              pointStrokeColor: \"#63b3ed\",\r\n              data: [203, 156, 99, 251, 305, 247, 256],\r\n            },\r\n            {\r\n              backgroundColor: \"rgba(198,198,198,0.4)\",\r\n              strokeColor: \"#f7fafc\",\r\n              pointColor: \"#fff\",\r\n              pointStrokeColor: \"#f7fafc\",\r\n              data: [86, 97, 144, 114, 94, 108, 156],\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n                ticks: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n            xAxes: [\r\n              {\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchAllStudents() {\r\n      try {\r\n        const response = await dashboardService.getAllStudents();\r\n        this.students = response.data; // Assuming 'data' contains your students array\r\n      } catch (error) {\r\n        console.error(\"Error fetching students:\", error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchAllStudents();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA2BA,OAAAA,gBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,WAAA;MACAC,cAAA;MACAC,UAAA;MACAC,sBAAA;MACAC,sBAAA;MACAC,UAAA;QACAC,IAAA;QACAP,IAAA;UACAQ,MAAA;UACAC,QAAA,GACA;YACAC,eAAA;YACAC,WAAA;YACAC,UAAA;YACAC,gBAAA;YACAb,IAAA;UACA,GACA;YACAU,eAAA;YACAC,WAAA;YACAC,UAAA;YACAC,gBAAA;YACAb,IAAA;UACA;QAEA;QACAc,OAAA;UACAC,MAAA;YACAC,OAAA;UACA;UACAC,MAAA;YACAC,KAAA,GACA;cACAC,SAAA;gBACAH,OAAA;cACA;cACAI,KAAA;gBACAJ,OAAA;cACA;YACA,EACA;YACAK,KAAA,GACA;cACAF,SAAA;gBACAH,OAAA;cACA;YACA;UAEA;QACA;MACA;IACA;EACA;EACAM,OAAA;IACA,MAAAC,iBAAA;MACA;QACA,MAAAC,QAAA,SAAA1B,gBAAA,CAAA2B,cAAA;QACA,KAAAC,QAAA,GAAAF,QAAA,CAAAxB,IAAA;MACA,SAAA2B,KAAA;QACAC,OAAA,CAAAD,KAAA,6BAAAA,KAAA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAN,gBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}