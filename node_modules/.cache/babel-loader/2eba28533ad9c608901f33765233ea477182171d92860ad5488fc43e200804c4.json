{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport dashboardService from \"../services/dashboardService\";\nexport default {\n  name: \"studentsHome\",\n  data() {\n    return {\n      students: [],\n      searchQuery: \"\",\n      currentPage: 1,\n      pageSize: 20\n    };\n  },\n  computed: {\n    filteredStudents() {\n      if (!this.searchQuery) {\n        return this.students;\n      }\n      return this.students.filter(student => {\n        // Adjust this logic based on what fields you want to search\n        return Object.values(student).some(value => value.toString().toLowerCase().includes(this.searchQuery.toLowerCase()));\n      });\n    },\n    paginatedStudents() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.filteredStudents.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.students.length / this.pageSize);\n    },\n    paginatedButtons() {\n      let startPage, endPage;\n      if (this.totalPages <= 5) {\n        // Less than 5 total pages, show all\n        startPage = 1;\n        endPage = this.totalPages;\n      } else {\n        // More than 5 total pages\n        if (this.currentPage <= 3) {\n          startPage = 1;\n          endPage = 5;\n        } else if (this.currentPage + 2 >= this.totalPages) {\n          startPage = this.totalPages - 4;\n          endPage = this.totalPages;\n        } else {\n          startPage = this.currentPage - 2;\n          endPage = this.currentPage + 2;\n        }\n      }\n      let pages = [];\n      for (let i = startPage; i <= endPage; i++) {\n        pages.push(i);\n      }\n      return pages;\n    }\n  },\n  methods: {\n    async fetchAllStudents() {\n      try {\n        const response = await dashboardService.getAllStudents();\n        this.students = response.data; // Assuming 'data' contains your students array\n      } catch (error) {\n        console.error(\"Error fetching students:\", error);\n      }\n    },\n    goToPage(pageNumber) {\n      this.currentPage = pageNumber;\n    }\n  },\n  watch: {\n    searchQuery() {\n      this.currentPage = 1;\n    }\n  },\n  mounted() {\n    this.fetchAllStudents();\n  }\n};","map":{"version":3,"names":["dashboardService","name","data","students","searchQuery","currentPage","pageSize","computed","filteredStudents","filter","student","Object","values","some","value","toString","toLowerCase","includes","paginatedStudents","start","end","slice","totalPages","Math","ceil","length","paginatedButtons","startPage","endPage","pages","i","push","methods","fetchAllStudents","response","getAllStudents","error","console","goToPage","pageNumber","watch","mounted"],"sources":["src/pages/Students.vue"],"sourcesContent":["<template>\r\n  <div id=\"students\">\r\n    <nav class=\"text-sm font-semibold mb-6\" aria-label=\"Breadcrumb\">\r\n      <ol class=\"list-none p-0 inline-flex\">\r\n        <li class=\"flex items-center text-blue-500\">\r\n          <a href=\"#\" class=\"text-gray-700\">MAIN</a>\r\n          <svg\r\n            class=\"fill-current w-3 h-3 mx-3\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 320 512\"\r\n          >\r\n            <path\r\n              d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n            />\r\n          </svg>\r\n        </li>\r\n        <li class=\"flex items-center\">\r\n          <a href=\"#\" class=\"text-gray-600\">Students</a>\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n\r\n    <div class=\"flex flex-wrap -mx-3\">\r\n      <div class=\"w-1/4\">\r\n        <!-- Adjust the width as needed -->\r\n        <input\r\n          type=\"text\"\r\n          class=\"input input-bordered w-full\"\r\n          placeholder=\"Search...\"\r\n          v-model=\"searchQuery\"\r\n        />\r\n      </div>\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"table table-xs w-full text-gray-700\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Gender</th>\r\n              <th>Race Ethnicity</th>\r\n              <th>Parental Level of Education</th>\r\n              <th>Lunch</th>\r\n              <th>Test Preparation Course</th>\r\n              <th>Math Score</th>\r\n              <th>Reading Score</th>\r\n              <th>writing Score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <!-- data rows -->\r\n            <tr v-for=\"student in paginatedStudents\" :key=\"student.id\">\r\n              <td>{{ student.id }}</td>\r\n              <td>{{ student.gender }}</td>\r\n              <td>{{ student.race_ethnicity }}</td>\r\n              <td>{{ student.parental_level_of_education }}</td>\r\n              <td>{{ student.lunch }}</td>\r\n              <td>{{ student.test_preparation_course }}</td>\r\n              <td>{{ student.math_score }}</td>\r\n              <td>{{ student.reading_score }}</td>\r\n              <td>{{ student.writing_score }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div v-if=\"filteredStudents.length === 0\" class=\"text-center py-4\">\r\n          No results found.\r\n        </div>\r\n      </div>\r\n      <div class=\"flex justify-center mt-4\">\r\n        <button\r\n          class=\"btn btn-xs btn-outline mr-2\"\r\n          v-for=\"page in paginatedButtons\"\r\n          :key=\"page\"\r\n          :class=\"{ 'btn-active': page === currentPage }\"\r\n          @click=\"goToPage(page)\"\r\n        >\r\n          {{ page }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dashboardService from \"../services/dashboardService\";\r\n\r\nexport default {\r\n  name: \"studentsHome\",\r\n  data() {\r\n    return {\r\n      students: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      pageSize: 20,\r\n    };\r\n  },\r\n  computed: {\r\n    filteredStudents() {\r\n      if (!this.searchQuery) {\r\n        return this.students;\r\n      }\r\n      return this.students.filter((student) => {\r\n        // Adjust this logic based on what fields you want to search\r\n        return Object.values(student).some((value) =>\r\n          value\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(this.searchQuery.toLowerCase())\r\n        );\r\n      });\r\n    },\r\n    paginatedStudents() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = start + this.pageSize;\r\n      return this.filteredStudents.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.students.length / this.pageSize);\r\n    },\r\n    paginatedButtons() {\r\n      let startPage, endPage;\r\n      if (this.totalPages <= 5) {\r\n        // Less than 5 total pages, show all\r\n        startPage = 1;\r\n        endPage = this.totalPages;\r\n      } else {\r\n        // More than 5 total pages\r\n        if (this.currentPage <= 3) {\r\n          startPage = 1;\r\n          endPage = 5;\r\n        } else if (this.currentPage + 2 >= this.totalPages) {\r\n          startPage = this.totalPages - 4;\r\n          endPage = this.totalPages;\r\n        } else {\r\n          startPage = this.currentPage - 2;\r\n          endPage = this.currentPage + 2;\r\n        }\r\n      }\r\n      let pages = [];\r\n      for (let i = startPage; i <= endPage; i++) {\r\n        pages.push(i);\r\n      }\r\n      return pages;\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchAllStudents() {\r\n      try {\r\n        const response = await dashboardService.getAllStudents();\r\n        this.students = response.data; // Assuming 'data' contains your students array\r\n      } catch (error) {\r\n        console.error(\"Error fetching students:\", error);\r\n      }\r\n    },\r\n    goToPage(pageNumber) {\r\n      this.currentPage = pageNumber;\r\n    },\r\n  },\r\n  watch: {\r\n    searchQuery() {\r\n      this.currentPage = 1;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchAllStudents();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAkFA,OAAAA,gBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,WAAA;MACAC,WAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,iBAAA;MACA,UAAAJ,WAAA;QACA,YAAAD,QAAA;MACA;MACA,YAAAA,QAAA,CAAAM,MAAA,CAAAC,OAAA;QACA;QACA,OAAAC,MAAA,CAAAC,MAAA,CAAAF,OAAA,EAAAG,IAAA,CAAAC,KAAA,IACAA,KAAA,CACAC,QAAA,GACAC,WAAA,GACAC,QAAA,MAAAb,WAAA,CAAAY,WAAA,GACA;MACA;IACA;IACAE,kBAAA;MACA,MAAAC,KAAA,SAAAd,WAAA,aAAAC,QAAA;MACA,MAAAc,GAAA,GAAAD,KAAA,QAAAb,QAAA;MACA,YAAAE,gBAAA,CAAAa,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;IACAE,WAAA;MACA,OAAAC,IAAA,CAAAC,IAAA,MAAArB,QAAA,CAAAsB,MAAA,QAAAnB,QAAA;IACA;IACAoB,iBAAA;MACA,IAAAC,SAAA,EAAAC,OAAA;MACA,SAAAN,UAAA;QACA;QACAK,SAAA;QACAC,OAAA,QAAAN,UAAA;MACA;QACA;QACA,SAAAjB,WAAA;UACAsB,SAAA;UACAC,OAAA;QACA,gBAAAvB,WAAA,aAAAiB,UAAA;UACAK,SAAA,QAAAL,UAAA;UACAM,OAAA,QAAAN,UAAA;QACA;UACAK,SAAA,QAAAtB,WAAA;UACAuB,OAAA,QAAAvB,WAAA;QACA;MACA;MACA,IAAAwB,KAAA;MACA,SAAAC,CAAA,GAAAH,SAAA,EAAAG,CAAA,IAAAF,OAAA,EAAAE,CAAA;QACAD,KAAA,CAAAE,IAAA,CAAAD,CAAA;MACA;MACA,OAAAD,KAAA;IACA;EACA;EACAG,OAAA;IACA,MAAAC,iBAAA;MACA;QACA,MAAAC,QAAA,SAAAlC,gBAAA,CAAAmC,cAAA;QACA,KAAAhC,QAAA,GAAA+B,QAAA,CAAAhC,IAAA;MACA,SAAAkC,KAAA;QACAC,OAAA,CAAAD,KAAA,6BAAAA,KAAA;MACA;IACA;IACAE,SAAAC,UAAA;MACA,KAAAlC,WAAA,GAAAkC,UAAA;IACA;EACA;EACAC,KAAA;IACApC,YAAA;MACA,KAAAC,WAAA;IACA;EACA;EACAoC,QAAA;IACA,KAAAR,gBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}